{"ast":null,"code":"import _slicedToArray from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Layouts/TopNav/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { faBars } from '@fortawesome/free-solid-svg-icons/faBars';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons/faGlobe';\nimport { ordered } from '@tablecheck/locales';\nimport { Button, ButtonAppearance } from '@tablecheck/tablekit-button';\nimport { Icon } from '@tablecheck/tablekit-icon';\nimport { View } from '@tablecheck/tablekit-language-selector';\nimport { LogoSymbol } from '@tablecheck/tablekit-logo';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { tciSun } from 'tablecheck-icons/tciSun';\nimport { getI18nextInstance } from 'i18n';\nimport { Sidenav } from '../Sidenav';\nimport { DesktopOnlyItems, LangSelectorButton, LanguageSelectorWrapper, LogoWording, LogoWrapper, MenuButton, TopNavContent, TopNavWrapper } from './styles';\nexport function TopNav(_ref) {\n  _s();\n\n  var _this = this;\n\n  var isDarkMode = _ref.isDarkMode,\n      setDarkMode = _ref.setDarkMode;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isMenuOpen = _React$useState2[0],\n      setMenuOpen = _React$useState2[1];\n\n  var i18next = getI18nextInstance();\n  var navigate = useNavigate();\n\n  var _useTranslation = useTranslation(),\n      _useTranslation2 = _slicedToArray(_useTranslation, 2),\n      t = _useTranslation2[0],\n      language = _useTranslation2[1].language;\n\n  var location = useLocation();\n  var currentLocale = ordered.find(function (locale) {\n    return locale.code === language;\n  });\n  if (!i18next || !language || !ordered) return null;\n\n  var changeLanguage = function changeLanguage(locale) {\n    var parts = location.pathname.split('/');\n    parts = parts.splice(2);\n    var page = \"/\".concat(locale, \"/\").concat(parts.join('/'));\n    navigate(page, {\n      replace: true\n    });\n    i18next.changeLanguage(locale);\n  };\n\n  return __jsx(TopNavWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(TopNavContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, __jsx(LogoWrapper, {\n    to: \"/\".concat(language),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(LogoSymbol, {\n    size: \"24px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), __jsx(LogoWording, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, t('keywords.app_name'))), __jsx(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(DesktopOnlyItems, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    appearance: ButtonAppearance.Subtle,\n    iconBefore: __jsx(Icon, {\n      icon: tciSun,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }\n    }),\n    onClick: function onClick() {\n      return setDarkMode(!isDarkMode);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(LanguageSelectorWrapper, {\n    currentLanguage: language,\n    locales: ordered,\n    shouldShowCloseIcon: true,\n    view: View.Desktop,\n    onChangeLanguage: changeLanguage,\n    renderTrigger: function renderTrigger(_ref2) {\n      var onClick = _ref2.onClick,\n          ref = _ref2.ref;\n      return __jsx(LangSelectorButton, {\n        onClick: onClick,\n        ref: ref,\n        appearance: ButtonAppearance.Subtle,\n        iconBefore: __jsx(Icon, {\n          icon: faGlobe,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 31\n          }\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, currentLocale === null || currentLocale === void 0 ? void 0 : currentLocale.label);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })), __jsx(MenuButton, {\n    onClick: function onClick() {\n      return setMenuOpen(!isMenuOpen);\n    },\n    appearance: ButtonAppearance.Subtle,\n    iconBefore: __jsx(Icon, {\n      icon: faBars,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))), __jsx(Sidenav, {\n    isOpen: isMenuOpen,\n    setOpen: setMenuOpen,\n    isDarkMode: isDarkMode,\n    setDarkMode: setDarkMode,\n    changeLanguage: changeLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(TopNav, \"eTNhAetAIOiK0MgpsJaB06x7TrI=\", false, function () {\n  return [useNavigate, useTranslation, useLocation];\n});\n\n_c = TopNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopNav\");","map":{"version":3,"names":["faBars","faGlobe","ordered","Button","ButtonAppearance","Icon","View","LogoSymbol","React","useTranslation","useLocation","useNavigate","tciSun","getI18nextInstance","Sidenav","DesktopOnlyItems","LangSelectorButton","LanguageSelectorWrapper","LogoWording","LogoWrapper","MenuButton","TopNavContent","TopNavWrapper","TopNav","isDarkMode","setDarkMode","useState","isMenuOpen","setMenuOpen","i18next","navigate","t","language","location","currentLocale","find","locale","code","changeLanguage","parts","pathname","split","splice","page","join","replace","display","Subtle","Desktop","onClick","ref","label"],"sources":["/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Layouts/TopNav/index.tsx"],"sourcesContent":["import { faBars } from '@fortawesome/free-solid-svg-icons/faBars';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons/faGlobe';\nimport { ordered } from '@tablecheck/locales';\nimport { Button, ButtonAppearance } from '@tablecheck/tablekit-button';\nimport { Icon } from '@tablecheck/tablekit-icon';\nimport { View } from '@tablecheck/tablekit-language-selector';\nimport { LogoSymbol } from '@tablecheck/tablekit-logo';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { tciSun } from 'tablecheck-icons/tciSun';\n\nimport { getI18nextInstance } from 'i18n';\n\nimport { Sidenav } from '../Sidenav';\n\nimport {\n  DesktopOnlyItems,\n  LangSelectorButton,\n  LanguageSelectorWrapper,\n  LogoWording,\n  LogoWrapper,\n  MenuButton,\n  TopNavContent,\n  TopNavWrapper\n} from './styles';\n\nexport function TopNav({\n  isDarkMode,\n  setDarkMode\n}: {\n  isDarkMode: boolean;\n  setDarkMode: (value: boolean) => void;\n}): JSX.Element | null {\n  const [isMenuOpen, setMenuOpen] = React.useState(false);\n  const i18next = getI18nextInstance();\n  const navigate = useNavigate();\n  const [t, { language }] = useTranslation();\n  const location = useLocation();\n  const currentLocale = ordered.find((locale) => locale.code === language);\n\n  if (!i18next || !language || !ordered) return null;\n\n  const changeLanguage = (locale: string) => {\n    let parts = location.pathname.split('/');\n    parts = parts.splice(2);\n    const page = `/${locale}/${parts.join('/')}`;\n\n    navigate(page, { replace: true });\n    i18next.changeLanguage(locale);\n  };\n\n  return (\n    <TopNavWrapper>\n      <TopNavContent>\n        <LogoWrapper to={`/${language}`}>\n          <LogoSymbol size=\"24px\" />\n          <LogoWording>{t('keywords.app_name')}</LogoWording>\n        </LogoWrapper>\n        <div style={{ display: 'flex' }}>\n          <DesktopOnlyItems>\n            <Button\n              appearance={ButtonAppearance.Subtle}\n              iconBefore={<Icon icon={tciSun} />}\n              onClick={() => setDarkMode(!isDarkMode)}\n            />\n            <LanguageSelectorWrapper\n              currentLanguage={language}\n              locales={ordered}\n              shouldShowCloseIcon\n              view={View.Desktop}\n              onChangeLanguage={changeLanguage}\n              renderTrigger={({ onClick, ref }) => (\n                <LangSelectorButton\n                  onClick={onClick}\n                  ref={ref}\n                  appearance={ButtonAppearance.Subtle}\n                  iconBefore={<Icon icon={faGlobe} />}\n                >\n                  {currentLocale?.label}\n                </LangSelectorButton>\n              )}\n            />\n          </DesktopOnlyItems>\n          <MenuButton\n            onClick={() => setMenuOpen(!isMenuOpen)}\n            appearance={ButtonAppearance.Subtle}\n            iconBefore={<Icon icon={faBars} />}\n          />\n        </div>\n      </TopNavContent>\n      <Sidenav\n        isOpen={isMenuOpen}\n        setOpen={setMenuOpen}\n        isDarkMode={isDarkMode}\n        setDarkMode={setDarkMode}\n        changeLanguage={changeLanguage}\n      />\n    </TopNavWrapper>\n  );\n}\n"],"mappings":";;;;;;AAAA,SAASA,MAAT,QAAuB,0CAAvB;AACA,SAASC,OAAT,QAAwB,2CAAxB;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,6BAAzC;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,IAAT,QAAqB,wCAArB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,SAASC,MAAT,QAAuB,yBAAvB;AAEA,SAASC,kBAAT,QAAmC,MAAnC;AAEA,SAASC,OAAT,QAAwB,YAAxB;AAEA,SACEC,gBADF,EAEEC,kBAFF,EAGEC,uBAHF,EAIEC,WAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,aAPF,EAQEC,aARF,QASO,UATP;AAWA,OAAO,SAASC,MAAT,OAMgB;EAAA;;EAAA;;EAAA,IALrBC,UAKqB,QALrBA,UAKqB;EAAA,IAJrBC,WAIqB,QAJrBA,WAIqB;;EACrB,sBAAkCjB,KAAK,CAACkB,QAAN,CAAe,KAAf,CAAlC;EAAA;EAAA,IAAOC,UAAP;EAAA,IAAmBC,WAAnB;;EACA,IAAMC,OAAO,GAAGhB,kBAAkB,EAAlC;EACA,IAAMiB,QAAQ,GAAGnB,WAAW,EAA5B;;EACA,sBAA0BF,cAAc,EAAxC;EAAA;EAAA,IAAOsB,CAAP;EAAA,IAAYC,QAAZ,uBAAYA,QAAZ;;EACA,IAAMC,QAAQ,GAAGvB,WAAW,EAA5B;EACA,IAAMwB,aAAa,GAAGhC,OAAO,CAACiC,IAAR,CAAa,UAACC,MAAD;IAAA,OAAYA,MAAM,CAACC,IAAP,KAAgBL,QAA5B;EAAA,CAAb,CAAtB;EAEA,IAAI,CAACH,OAAD,IAAY,CAACG,QAAb,IAAyB,CAAC9B,OAA9B,EAAuC,OAAO,IAAP;;EAEvC,IAAMoC,cAAc,GAAG,SAAjBA,cAAiB,CAACF,MAAD,EAAoB;IACzC,IAAIG,KAAK,GAAGN,QAAQ,CAACO,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,CAAZ;IACAF,KAAK,GAAGA,KAAK,CAACG,MAAN,CAAa,CAAb,CAAR;IACA,IAAMC,IAAI,cAAOP,MAAP,cAAiBG,KAAK,CAACK,IAAN,CAAW,GAAX,CAAjB,CAAV;IAEAd,QAAQ,CAACa,IAAD,EAAO;MAAEE,OAAO,EAAE;IAAX,CAAP,CAAR;IACAhB,OAAO,CAACS,cAAR,CAAuBF,MAAvB;EACD,CAPD;;EASA,OACE,MAAC,aAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,aAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,WAAD;IAAa,EAAE,aAAMJ,QAAN,CAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,UAAD;IAAY,IAAI,EAAC,MAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEE,MAAC,WAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAcD,CAAC,CAAC,mBAAD,CAAf,CAFF,CADF,EAKE;IAAK,KAAK,EAAE;MAAEe,OAAO,EAAE;IAAX,CAAZ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,gBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,MAAC,MAAD;IACE,UAAU,EAAE1C,gBAAgB,CAAC2C,MAD/B;IAEE,UAAU,EAAE,MAAC,IAAD;MAAM,IAAI,EAAEnC,MAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFd;IAGE,OAAO,EAAE;MAAA,OAAMa,WAAW,CAAC,CAACD,UAAF,CAAjB;IAAA,CAHX;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAME,MAAC,uBAAD;IACE,eAAe,EAAEQ,QADnB;IAEE,OAAO,EAAE9B,OAFX;IAGE,mBAAmB,MAHrB;IAIE,IAAI,EAAEI,IAAI,CAAC0C,OAJb;IAKE,gBAAgB,EAAEV,cALpB;IAME,aAAa,EAAE;MAAA,IAAGW,OAAH,SAAGA,OAAH;MAAA,IAAYC,GAAZ,SAAYA,GAAZ;MAAA,OACb,MAAC,kBAAD;QACE,OAAO,EAAED,OADX;QAEE,GAAG,EAAEC,GAFP;QAGE,UAAU,EAAE9C,gBAAgB,CAAC2C,MAH/B;QAIE,UAAU,EAAE,MAAC,IAAD;UAAM,IAAI,EAAE9C,OAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EAJd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAMGiC,aANH,aAMGA,aANH,uBAMGA,aAAa,CAAEiB,KANlB,CADa;IAAA,CANjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EANF,CADF,EAyBE,MAAC,UAAD;IACE,OAAO,EAAE;MAAA,OAAMvB,WAAW,CAAC,CAACD,UAAF,CAAjB;IAAA,CADX;IAEE,UAAU,EAAEvB,gBAAgB,CAAC2C,MAF/B;IAGE,UAAU,EAAE,MAAC,IAAD;MAAM,IAAI,EAAE/C,MAAZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAzBF,CALF,CADF,EAsCE,MAAC,OAAD;IACE,MAAM,EAAE2B,UADV;IAEE,OAAO,EAAEC,WAFX;IAGE,UAAU,EAAEJ,UAHd;IAIE,WAAW,EAAEC,WAJf;IAKE,cAAc,EAAEa,cALlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAtCF,CADF;AAgDD;;GAzEef,M;UASGZ,W,EACSF,c,EACTC,W;;;KAXHa,M"},"metadata":{},"sourceType":"module"}