{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nimport _defineProperty from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Common/Theme/index.tsx\",\n    _templateObject,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { css, Global } from '@emotion/react';\nimport { LocaleCode } from '@tablecheck/locales';\nimport { buttonClassicTheme, buttonDarkTheme, buttonThemeNamespace } from '@tablecheck/tablekit-button';\nimport { COLORS, Spacing, ThemeProvider } from '@tablecheck/tablekit-theme';\nimport { commonTypographyStyles } from '@tablecheck/tablekit-typography';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport { defaultTheme } from './Themes/default';\nexport function AppThemeProvider(_ref) {\n  _s();\n\n  var _this = this,\n      _theme$colors;\n\n  var isDarkMode = _ref.isDarkMode,\n      setDarkMode = _ref.setDarkMode,\n      children = _ref.children;\n\n  var _useTranslation = useTranslation(),\n      _useTranslation2 = _slicedToArray(_useTranslation, 2),\n      language = _useTranslation2[1].language;\n\n  var isRtl = [LocaleCode.Arabic].indexOf(language) !== -1;\n  var selectedTheme = defaultTheme;\n  React.useEffect(function () {\n    if (window.matchMedia) {\n      var media = window.matchMedia('(prefers-color-scheme: dark)');\n      var isSystemDark = media.matches;\n      setDarkMode(isSystemDark);\n\n      var listener = function listener(e) {\n        setDarkMode(e.matches);\n      };\n\n      if (media.addEventListener) {\n        media.addEventListener('change', listener);\n      } else {\n        // Safari and IE\n        media.addListener(listener);\n      }\n\n      return function () {\n        if (media.removeEventListener) {\n          media.removeEventListener('change', listener);\n        } else {\n          media.removeListener(listener);\n        }\n      };\n    }\n\n    return undefined;\n  }, [selectedTheme, setDarkMode]);\n  var theme = React.useMemo(function () {\n    var _objectSpread2;\n\n    var customButtonDarkTheme = _objectSpread(_objectSpread({}, buttonDarkTheme), {}, {\n      primary: _objectSpread(_objectSpread({}, buttonDarkTheme.primary), {}, {\n        main: COLORS.PURPLE.L5,\n        hover: COLORS.PURPLE.L6\n      })\n    });\n\n    var updatedTheme = isDarkMode ? _objectSpread(_objectSpread({}, selectedTheme.dark), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, buttonThemeNamespace, customButtonDarkTheme), _defineProperty(_objectSpread2, buttonThemeNamespace, buttonDarkTheme), _objectSpread2)) : _objectSpread(_objectSpread({}, selectedTheme.classic), {}, _defineProperty({}, buttonThemeNamespace, buttonClassicTheme));\n    return _objectSpread(_objectSpread({}, updatedTheme), {}, {\n      isRtl: isRtl\n    });\n  }, [isDarkMode, selectedTheme, isRtl]);\n  return __jsx(ThemeProvider, {\n    locale: language,\n    theme: theme,\n    isDark: isDarkMode,\n    renderHeadNodes: function renderHeadNodes(nodes) {\n      return __jsx(Helmet, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 35\n        }\n      }, nodes);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(Global, {\n    styles: css(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n          html,\\n          body,\\n          #root {\\n            height: 100%;\\n          }\\n\\n          body {\\n            background-color: \", \";\\n          }\\n\\n          p {\\n            margin: \", \" 0;\\n          }\\n\\n          \", \";\\n        \"])), (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.canvas, Spacing.L4, commonTypographyStyles),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), children);\n}\n\n_s(AppThemeProvider, \"m6oUGWmBARzXilaH3jOApBar2iM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AppThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppThemeProvider\");","map":{"version":3,"names":["css","Global","LocaleCode","buttonClassicTheme","buttonDarkTheme","buttonThemeNamespace","COLORS","Spacing","ThemeProvider","commonTypographyStyles","React","Helmet","useTranslation","defaultTheme","AppThemeProvider","isDarkMode","setDarkMode","children","language","isRtl","Arabic","indexOf","selectedTheme","useEffect","window","matchMedia","media","isSystemDark","matches","listener","e","addEventListener","addListener","removeEventListener","removeListener","undefined","theme","useMemo","customButtonDarkTheme","primary","main","PURPLE","L5","hover","L6","updatedTheme","dark","classic","nodes","colors","canvas","L4"],"sources":["/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Common/Theme/index.tsx"],"sourcesContent":["import { css, Global, Theme } from '@emotion/react';\nimport { LocaleCode } from '@tablecheck/locales';\nimport {\n  buttonClassicTheme,\n  buttonDarkTheme,\n  buttonThemeNamespace\n} from '@tablecheck/tablekit-button';\nimport { COLORS, Spacing, ThemeProvider } from '@tablecheck/tablekit-theme';\nimport { commonTypographyStyles } from '@tablecheck/tablekit-typography';\nimport * as React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\n\nimport { defaultTheme } from './Themes/default';\n\nexport function AppThemeProvider({\n  isDarkMode,\n  setDarkMode,\n  children\n}: {\n  isDarkMode: boolean;\n  setDarkMode: (value: boolean) => void;\n  children: React.ReactNode;\n}): JSX.Element {\n  const [, { language }] = useTranslation();\n  const isRtl = [LocaleCode.Arabic].indexOf(language as LocaleCode) !== -1;\n  const selectedTheme = defaultTheme;\n\n  React.useEffect(() => {\n    if (window.matchMedia) {\n      const media = window.matchMedia('(prefers-color-scheme: dark)');\n      const isSystemDark = media.matches;\n      setDarkMode(isSystemDark);\n\n      const listener = (e: MediaQueryListEvent) => {\n        setDarkMode(e.matches);\n      };\n\n      if (media.addEventListener) {\n        media.addEventListener('change', listener);\n      } else {\n        // Safari and IE\n        media.addListener(listener);\n      }\n\n      return () => {\n        if (media.removeEventListener) {\n          media.removeEventListener('change', listener);\n        } else {\n          media.removeListener(listener);\n        }\n      };\n    }\n\n    return undefined;\n  }, [selectedTheme, setDarkMode]);\n\n  const theme = React.useMemo<Partial<Theme>>(() => {\n    const customButtonDarkTheme = {\n      ...buttonDarkTheme,\n      primary: {\n        ...buttonDarkTheme.primary,\n        main: COLORS.PURPLE.L5,\n        hover: COLORS.PURPLE.L6\n      }\n    };\n\n    const updatedTheme = isDarkMode\n      ? {\n          ...selectedTheme.dark,\n          [buttonThemeNamespace]: customButtonDarkTheme,\n          [buttonThemeNamespace]: buttonDarkTheme\n        }\n      : {\n          ...selectedTheme.classic,\n          [buttonThemeNamespace]: buttonClassicTheme\n        };\n\n    return {\n      ...updatedTheme,\n      isRtl\n    };\n  }, [isDarkMode, selectedTheme, isRtl]);\n\n  return (\n    <ThemeProvider\n      locale={language}\n      theme={theme}\n      isDark={isDarkMode}\n      renderHeadNodes={(nodes) => <Helmet>{nodes}</Helmet>}\n    >\n      <Global\n        styles={css`\n          html,\n          body,\n          #root {\n            height: 100%;\n          }\n\n          body {\n            background-color: ${theme.colors?.canvas};\n          }\n\n          p {\n            margin: ${Spacing.L4} 0;\n          }\n\n          ${commonTypographyStyles};\n        `}\n      />\n      {children}\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}