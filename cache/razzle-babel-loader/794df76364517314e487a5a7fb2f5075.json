{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _jsxFileName = \"/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Pages/Listing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nexport function Listing(_ref) {\n  _s();\n\n  var _listing$locations,\n      _this = this;\n\n  var listing = _ref.listing;\n\n  var _useState = useState([]),\n      shopList = _useState[0],\n      setShopList = _useState[1];\n\n  var _useState2 = useState({\n    latitude: '',\n    longitude: ''\n  }),\n      geoQuery = _useState2[0],\n      setGeoQuery = _useState2[1];\n\n  var getListing = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(geoQuery) {\n      var res, data;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://staging-snap.tablecheck.com/v2/shop_search?geo_latitude=\".concat(geoQuery.latitude, \"&geo_longitude=\").concat(geoQuery.longitude, \"&shop_universe_id=57e0b91744aea12988000001&locale=en&per_page=50\"));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              console.log(data);\n              setShopList(data.shops);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getListing(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleClick = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(location) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setGeoQuery({\n                latitude: location.payload.geo.lat,\n                longitude: location.payload.geo.lon\n              });\n              getListing(geoQuery);\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleClick(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {// getListing()\n  }, []);\n  return (// <PageContent>\n    __jsx(React.Fragment, null, (_listing$locations = listing.locations) === null || _listing$locations === void 0 ? void 0 : _listing$locations.map(function (location, idx) {\n      return (// <Link to={'shops'} key={idx} style={{ display: 'block' }}>\n        __jsx(\"p\", {\n          onClick: function onClick() {\n            return handleClick(location);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, location.text) // </Link>\n\n      );\n    })) // </PageContent>\n\n  );\n}\n\n_s(Listing, \"mjuwmvAsygjZs/9IVVwsZFXXkTA=\");\n\n_c = Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"names":["useEffect","useState","Listing","listing","shopList","setShopList","latitude","longitude","geoQuery","setGeoQuery","getListing","fetch","res","json","data","console","log","shops","handleClick","location","payload","geo","lat","lon","locations","map","idx","text"],"sources":["/Users/yoji/Desktop/Software engineer/Job hunting 2022.11/tablecheck-demo/src/Pages/Listing/index.tsx"],"sourcesContent":["import { Helmet } from 'react-helmet'\nimport { useTranslation } from 'react-i18next'\nimport { Outlet } from 'react-router-dom'\nimport { PageWrapper, PageContent, Headline, PageImage } from 'Layouts'\nimport { Button } from '@tablecheck/tablekit-button'\nimport { Input } from '@tablecheck/tablekit-input'\n\nimport { HomeHeadline, HomeWrapper } from './styles'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\ntype ListingProps = {\n  locations: []\n  shops: []\n}\n\nexport function Listing({ listing }: ListingProps): JSX.Element {\n  const [shopList, setShopList] = useState([])\n  const [geoQuery, setGeoQuery] = useState({ latitude: '', longitude: '' })\n\n  const getListing = async (geoQuery) => {\n    const res = await fetch(\n      `https://staging-snap.tablecheck.com/v2/shop_search?geo_latitude=${geoQuery.latitude}&geo_longitude=${geoQuery.longitude}&shop_universe_id=57e0b91744aea12988000001&locale=en&per_page=50`,\n    )\n    const data = await res.json()\n    console.log(data)\n    setShopList(data.shops)\n  }\n\n  const handleClick = async (location) => {\n    setGeoQuery({\n      latitude: location.payload.geo.lat,\n      longitude: location.payload.geo.lon,\n    })\n\n    getListing(geoQuery)\n  }\n\n  useEffect(() => {\n    // getListing()\n  }, [])\n\n  return (\n    // <PageContent>\n    <>\n      {/* {shopList.map((shop, idx) => (\n        <Link to={'shopdetail'} key={idx}>\n          {shop.name}\n        </Link>\n      ))} */}\n      {listing.locations?.map((location, idx) => (\n        // <Link to={'shops'} key={idx} style={{ display: 'block' }}>\n        <p onClick={() => handleClick(location)}>{location.text}</p>\n        // </Link>\n      ))}\n    </>\n    // </PageContent>\n  )\n}\n"],"mappings":";;;;;;;;AAQA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAQA,OAAO,SAASC,OAAT,OAAyD;EAAA;;EAAA;EAAA;;EAAA,IAAtCC,OAAsC,QAAtCA,OAAsC;;EAC9D,gBAAgCF,QAAQ,CAAC,EAAD,CAAxC;EAAA,IAAOG,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAgCJ,QAAQ,CAAC;IAAEK,QAAQ,EAAE,EAAZ;IAAgBC,SAAS,EAAE;EAA3B,CAAD,CAAxC;EAAA,IAAOC,QAAP;EAAA,IAAiBC,WAAjB;;EAEA,IAAMC,UAAU;IAAA,uEAAG,iBAAOF,QAAP;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACCG,KAAK,2EAC8CH,QAAQ,CAACF,QADvD,4BACiFE,QAAQ,CAACD,SAD1F,sEADN;;YAAA;cACXK,GADW;cAAA;cAAA,OAIEA,GAAG,CAACC,IAAJ,EAJF;;YAAA;cAIXC,IAJW;cAKjBC,OAAO,CAACC,GAAR,CAAYF,IAAZ;cACAT,WAAW,CAACS,IAAI,CAACG,KAAN,CAAX;;YANiB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAVP,UAAU;MAAA;IAAA;EAAA,GAAhB;;EASA,IAAMQ,WAAW;IAAA,uEAAG,kBAAOC,QAAP;MAAA;QAAA;UAAA;YAAA;cAClBV,WAAW,CAAC;gBACVH,QAAQ,EAAEa,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqBC,GADrB;gBAEVf,SAAS,EAAEY,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqBE;cAFtB,CAAD,CAAX;cAKAb,UAAU,CAACF,QAAD,CAAV;;YANkB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAH;;IAAA,gBAAXU,WAAW;MAAA;IAAA;EAAA,GAAjB;;EASAlB,SAAS,CAAC,YAAM,CACd;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE;IACA,kDAMGG,OAAO,CAACqB,SANX,uDAMG,mBAAmBC,GAAnB,CAAuB,UAACN,QAAD,EAAWO,GAAX;MAAA,OACtB;QACA;UAAG,OAAO,EAAE;YAAA,OAAMR,WAAW,CAACC,QAAD,CAAjB;UAAA,CAAZ;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAA0CA,QAAQ,CAACQ,IAAnD,CAFsB,CAGtB;;MAHsB;IAAA,CAAvB,CANH,CAFF,CAcE;;EAdF;AAgBD;;GA1CezB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}